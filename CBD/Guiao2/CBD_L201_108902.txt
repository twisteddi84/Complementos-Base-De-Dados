Ver databases:
show dbs

Criar ou entrar numa Database:
use <Database_Name>

Ver collections:
show collections

Inserir dados numa collection:
db.<Collection_Name>.insert({"Exemplo":1})

Ver dados da collection:
db.<Collection.Name>.find().pretty()

Ver coluna da colection:
db.users.find({ "Exemplo": { $exists: true } })



> show dbs
admin    0.000GB
config   0.000GB
firstDB  0.000GB
local    0.000GB
> use firstDB
switched to db firstDB
> db.users.insert([{"nome":"Tomas","idade":19},{"nome":"Duarte","idade":20,"filmes":{"nome":"Titanic"}}])
BulkWriteResult({
	"writeErrors" : [ ],
	"writeConcernErrors" : [ ],
	"nInserted" : 2,
	"nUpserted" : 0,
	"nMatched" : 0,
	"nModified" : 0,
	"nRemoved" : 0,
	"upserted" : [ ]
})
> db.users.find().pretty()
{
	"_id" : ObjectId("6518b22c16ec39ca172bde8d"),
	"nome" : "Diogo",
	"idade" : 20,
	"sexo" : "Masculino"
}
{
	"_id" : ObjectId("6518b3d816ec39ca172bde8e"),
	"nome" : "Tomas",
	"idade" : 19
}
{
	"_id" : ObjectId("6518b3d816ec39ca172bde8f"),
	"nome" : "Duarte",
	"idade" : 20,
	"filmes" : {
		"nome" : "Titanic"
	}
}
> // Recupere os documentos da coleção 'users'
> const cursor = db.users.find();
> 
> // Itere sobre os documentos e exiba os nomes
> while (cursor.hasNext()) {
...   const document = cursor.next();
...   print(document.nome);
... }
Diogo
Tomas
Duarte
> db.users.find({ "nome": { $exists: true } })
{ "_id" : ObjectId("6518b22c16ec39ca172bde8d"), "nome" : "Diogo", "idade" : 20, "sexo" : "Masculino" }
{ "_id" : ObjectId("6518b3d816ec39ca172bde8e"), "nome" : "Tomas", "idade" : 19 }
{ "_id" : ObjectId("6518b3d816ec39ca172bde8f"), "nome" : "Duarte", "idade" : 20, "filmes" : { "nome" : "Titanic" } }

